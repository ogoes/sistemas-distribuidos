// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: red.proto

#include "red.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_red_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Curso_red_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_red_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ResponseStatus_red_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_red_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Aluno_red_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_red_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Disciplina_red_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_red_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Matricula_red_2eproto;
namespace sd {
class CursoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Curso> _instance;
} _Curso_default_instance_;
class DisciplinaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Disciplina> _instance;
} _Disciplina_default_instance_;
class AlunoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Aluno> _instance;
} _Aluno_default_instance_;
class MatriculaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Matricula> _instance;
} _Matricula_default_instance_;
class ResponseStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResponseStatus> _instance;
} _ResponseStatus_default_instance_;
class NotaRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NotaRequest> _instance;
} _NotaRequest_default_instance_;
class NotaResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NotaResponse> _instance;
} _NotaResponse_default_instance_;
class MatriculaRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MatriculaRequest> _instance;
} _MatriculaRequest_default_instance_;
class MatriculaResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MatriculaResponse> _instance;
} _MatriculaResponse_default_instance_;
class AlunosRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AlunosRequest> _instance;
} _AlunosRequest_default_instance_;
class AlunosResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AlunosResponse> _instance;
} _AlunosResponse_default_instance_;
class DisciplinaRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DisciplinaRequest> _instance;
} _DisciplinaRequest_default_instance_;
class DisciplinaResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DisciplinaResponse> _instance;
} _DisciplinaResponse_default_instance_;
}  // namespace sd
static void InitDefaultsCurso_red_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sd::_Curso_default_instance_;
    new (ptr) ::sd::Curso();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sd::Curso::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Curso_red_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCurso_red_2eproto}, {}};

static void InitDefaultsDisciplina_red_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sd::_Disciplina_default_instance_;
    new (ptr) ::sd::Disciplina();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sd::Disciplina::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Disciplina_red_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDisciplina_red_2eproto}, {
      &scc_info_Curso_red_2eproto.base,}};

static void InitDefaultsAluno_red_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sd::_Aluno_default_instance_;
    new (ptr) ::sd::Aluno();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sd::Aluno::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Aluno_red_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAluno_red_2eproto}, {
      &scc_info_Curso_red_2eproto.base,}};

static void InitDefaultsMatricula_red_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sd::_Matricula_default_instance_;
    new (ptr) ::sd::Matricula();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sd::Matricula::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Matricula_red_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMatricula_red_2eproto}, {
      &scc_info_Aluno_red_2eproto.base,
      &scc_info_Disciplina_red_2eproto.base,}};

static void InitDefaultsResponseStatus_red_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sd::_ResponseStatus_default_instance_;
    new (ptr) ::sd::ResponseStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sd::ResponseStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResponseStatus_red_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResponseStatus_red_2eproto}, {}};

static void InitDefaultsNotaRequest_red_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sd::_NotaRequest_default_instance_;
    new (ptr) ::sd::NotaRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sd::NotaRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NotaRequest_red_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNotaRequest_red_2eproto}, {
      &scc_info_Matricula_red_2eproto.base,}};

static void InitDefaultsNotaResponse_red_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sd::_NotaResponse_default_instance_;
    new (ptr) ::sd::NotaResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sd::NotaResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_NotaResponse_red_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsNotaResponse_red_2eproto}, {
      &scc_info_Matricula_red_2eproto.base,
      &scc_info_ResponseStatus_red_2eproto.base,}};

static void InitDefaultsMatriculaRequest_red_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sd::_MatriculaRequest_default_instance_;
    new (ptr) ::sd::MatriculaRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sd::MatriculaRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MatriculaRequest_red_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMatriculaRequest_red_2eproto}, {
      &scc_info_Disciplina_red_2eproto.base,}};

static void InitDefaultsMatriculaResponse_red_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sd::_MatriculaResponse_default_instance_;
    new (ptr) ::sd::MatriculaResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sd::MatriculaResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_MatriculaResponse_red_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsMatriculaResponse_red_2eproto}, {
      &scc_info_Disciplina_red_2eproto.base,
      &scc_info_Matricula_red_2eproto.base,
      &scc_info_ResponseStatus_red_2eproto.base,}};

static void InitDefaultsAlunosRequest_red_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sd::_AlunosRequest_default_instance_;
    new (ptr) ::sd::AlunosRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sd::AlunosRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AlunosRequest_red_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAlunosRequest_red_2eproto}, {
      &scc_info_Disciplina_red_2eproto.base,}};

static void InitDefaultsAlunosResponse_red_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sd::_AlunosResponse_default_instance_;
    new (ptr) ::sd::AlunosResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sd::AlunosResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_AlunosResponse_red_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAlunosResponse_red_2eproto}, {
      &scc_info_ResponseStatus_red_2eproto.base,
      &scc_info_Aluno_red_2eproto.base,}};

static void InitDefaultsDisciplinaRequest_red_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sd::_DisciplinaRequest_default_instance_;
    new (ptr) ::sd::DisciplinaRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sd::DisciplinaRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DisciplinaRequest_red_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDisciplinaRequest_red_2eproto}, {
      &scc_info_Curso_red_2eproto.base,}};

static void InitDefaultsDisciplinaResponse_red_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sd::_DisciplinaResponse_default_instance_;
    new (ptr) ::sd::DisciplinaResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sd::DisciplinaResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_DisciplinaResponse_red_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsDisciplinaResponse_red_2eproto}, {
      &scc_info_Curso_red_2eproto.base,
      &scc_info_Disciplina_red_2eproto.base,
      &scc_info_ResponseStatus_red_2eproto.base,}};

void InitDefaults_red_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Curso_red_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Disciplina_red_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Aluno_red_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Matricula_red_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResponseStatus_red_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NotaRequest_red_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NotaResponse_red_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MatriculaRequest_red_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MatriculaResponse_red_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AlunosRequest_red_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AlunosResponse_red_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DisciplinaRequest_red_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DisciplinaResponse_red_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_red_2eproto[13];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_red_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_red_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_red_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sd::Curso, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sd::Curso, codigo_),
  PROTOBUF_FIELD_OFFSET(::sd::Curso, nome_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sd::Disciplina, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sd::Disciplina, codigo_),
  PROTOBUF_FIELD_OFFSET(::sd::Disciplina, nome_),
  PROTOBUF_FIELD_OFFSET(::sd::Disciplina, professor_),
  PROTOBUF_FIELD_OFFSET(::sd::Disciplina, curso_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sd::Aluno, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sd::Aluno, ra_),
  PROTOBUF_FIELD_OFFSET(::sd::Aluno, nome_),
  PROTOBUF_FIELD_OFFSET(::sd::Aluno, periodo_),
  PROTOBUF_FIELD_OFFSET(::sd::Aluno, curso_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sd::Matricula, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sd::Matricula, aluno_),
  PROTOBUF_FIELD_OFFSET(::sd::Matricula, disciplina_),
  PROTOBUF_FIELD_OFFSET(::sd::Matricula, ano_),
  PROTOBUF_FIELD_OFFSET(::sd::Matricula, semestre_),
  PROTOBUF_FIELD_OFFSET(::sd::Matricula, nota_),
  PROTOBUF_FIELD_OFFSET(::sd::Matricula, faltas_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sd::ResponseStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sd::ResponseStatus, statuscode_),
  PROTOBUF_FIELD_OFFSET(::sd::ResponseStatus, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sd::NotaRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sd::NotaRequest, type_),
  PROTOBUF_FIELD_OFFSET(::sd::NotaRequest, matricula_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sd::NotaResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sd::NotaResponse, matricula_),
  PROTOBUF_FIELD_OFFSET(::sd::NotaResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sd::MatriculaRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sd::MatriculaRequest, disciplina_),
  PROTOBUF_FIELD_OFFSET(::sd::MatriculaRequest, ano_),
  PROTOBUF_FIELD_OFFSET(::sd::MatriculaRequest, semestre_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sd::MatriculaResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sd::MatriculaResponse, disciplina_),
  PROTOBUF_FIELD_OFFSET(::sd::MatriculaResponse, matriculas_),
  PROTOBUF_FIELD_OFFSET(::sd::MatriculaResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sd::AlunosRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sd::AlunosRequest, disciplina_),
  PROTOBUF_FIELD_OFFSET(::sd::AlunosRequest, ano_),
  PROTOBUF_FIELD_OFFSET(::sd::AlunosRequest, semestre_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sd::AlunosResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sd::AlunosResponse, status_),
  PROTOBUF_FIELD_OFFSET(::sd::AlunosResponse, alunos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sd::DisciplinaRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sd::DisciplinaRequest, curso_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sd::DisciplinaResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sd::DisciplinaResponse, curso_),
  PROTOBUF_FIELD_OFFSET(::sd::DisciplinaResponse, disciplinas_),
  PROTOBUF_FIELD_OFFSET(::sd::DisciplinaResponse, status_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::sd::Curso)},
  { 7, -1, sizeof(::sd::Disciplina)},
  { 16, -1, sizeof(::sd::Aluno)},
  { 25, -1, sizeof(::sd::Matricula)},
  { 36, -1, sizeof(::sd::ResponseStatus)},
  { 43, -1, sizeof(::sd::NotaRequest)},
  { 50, -1, sizeof(::sd::NotaResponse)},
  { 57, -1, sizeof(::sd::MatriculaRequest)},
  { 65, -1, sizeof(::sd::MatriculaResponse)},
  { 73, -1, sizeof(::sd::AlunosRequest)},
  { 81, -1, sizeof(::sd::AlunosResponse)},
  { 88, -1, sizeof(::sd::DisciplinaRequest)},
  { 94, -1, sizeof(::sd::DisciplinaResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::sd::_Curso_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sd::_Disciplina_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sd::_Aluno_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sd::_Matricula_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sd::_ResponseStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sd::_NotaRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sd::_NotaResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sd::_MatriculaRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sd::_MatriculaResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sd::_AlunosRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sd::_AlunosResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sd::_DisciplinaRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sd::_DisciplinaResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_red_2eproto = {
  {}, AddDescriptors_red_2eproto, "red.proto", schemas,
  file_default_instances, TableStruct_red_2eproto::offsets,
  file_level_metadata_red_2eproto, 13, file_level_enum_descriptors_red_2eproto, file_level_service_descriptors_red_2eproto,
};

const char descriptor_table_protodef_red_2eproto[] =
  "\n\tred.proto\022\002sd\"%\n\005Curso\022\016\n\006codigo\030\001 \001(\005"
  "\022\014\n\004nome\030\002 \001(\t\"W\n\nDisciplina\022\016\n\006codigo\030\001"
  " \001(\t\022\014\n\004nome\030\002 \001(\t\022\021\n\tprofessor\030\003 \001(\t\022\030\n"
  "\005curso\030\004 \001(\0132\t.sd.Curso\"L\n\005Aluno\022\n\n\002RA\030\001"
  " \001(\005\022\014\n\004nome\030\002 \001(\t\022\017\n\007periodo\030\003 \001(\005\022\030\n\005c"
  "urso\030\004 \001(\0132\t.sd.Curso\"\206\001\n\tMatricula\022\030\n\005a"
  "luno\030\001 \001(\0132\t.sd.Aluno\022\"\n\ndisciplina\030\002 \001("
  "\0132\016.sd.Disciplina\022\013\n\003ano\030\003 \001(\005\022\020\n\010semest"
  "re\030\004 \001(\005\022\014\n\004nota\030\005 \001(\002\022\016\n\006faltas\030\006 \001(\005\"5"
  "\n\016ResponseStatus\022\022\n\nstatusCode\030\001 \001(\005\022\017\n\007"
  "message\030\002 \001(\t\"\237\001\n\013NotaRequest\022+\n\004type\030\001 "
  "\001(\0162\035.sd.NotaRequest.OperationType\022 \n\tma"
  "tricula\030\002 \001(\0132\r.sd.Matricula\"A\n\rOperatio"
  "nType\022\n\n\006CREATE\020\000\022\014\n\010RETRIEVE\020\001\022\n\n\006UPDAT"
  "E\020\002\022\n\n\006DELETE\020\003\"T\n\014NotaResponse\022 \n\tmatri"
  "cula\030\001 \003(\0132\r.sd.Matricula\022\"\n\006status\030\002 \001("
  "\0132\022.sd.ResponseStatus\"U\n\020MatriculaReques"
  "t\022\"\n\ndisciplina\030\001 \001(\0132\016.sd.Disciplina\022\013\n"
  "\003ano\030\002 \001(\005\022\020\n\010semestre\030\003 \001(\005\"~\n\021Matricul"
  "aResponse\022\"\n\ndisciplina\030\001 \001(\0132\016.sd.Disci"
  "plina\022!\n\nmatriculas\030\002 \003(\0132\r.sd.Matricula"
  "\022\"\n\006status\030\003 \001(\0132\022.sd.ResponseStatus\"R\n\r"
  "AlunosRequest\022\"\n\ndisciplina\030\001 \001(\0132\016.sd.D"
  "isciplina\022\013\n\003ano\030\002 \001(\005\022\020\n\010semestre\030\003 \001(\005"
  "\"O\n\016AlunosResponse\022\"\n\006status\030\001 \001(\0132\022.sd."
  "ResponseStatus\022\031\n\006alunos\030\002 \003(\0132\t.sd.Alun"
  "o\"-\n\021DisciplinaRequest\022\030\n\005curso\030\001 \001(\0132\t."
  "sd.Curso\"w\n\022DisciplinaResponse\022\030\n\005curso\030"
  "\001 \001(\0132\t.sd.Curso\022#\n\013disciplinas\030\002 \003(\0132\016."
  "sd.Disciplina\022\"\n\006status\030\003 \001(\0132\022.sd.Respo"
  "nseStatusb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_red_2eproto = {
  false, InitDefaults_red_2eproto, 
  descriptor_table_protodef_red_2eproto,
  "red.proto", &assign_descriptors_table_red_2eproto, 1217,
};

void AddDescriptors_red_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_red_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_red_2eproto = []() { AddDescriptors_red_2eproto(); return true; }();
namespace sd {
const ::google::protobuf::EnumDescriptor* NotaRequest_OperationType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_red_2eproto);
  return file_level_enum_descriptors_red_2eproto[0];
}
bool NotaRequest_OperationType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const NotaRequest_OperationType NotaRequest::CREATE;
const NotaRequest_OperationType NotaRequest::RETRIEVE;
const NotaRequest_OperationType NotaRequest::UPDATE;
const NotaRequest_OperationType NotaRequest::DELETE;
const NotaRequest_OperationType NotaRequest::OperationType_MIN;
const NotaRequest_OperationType NotaRequest::OperationType_MAX;
const int NotaRequest::OperationType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Curso::InitAsDefaultInstance() {
}
class Curso::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Curso::kCodigoFieldNumber;
const int Curso::kNomeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Curso::Curso()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sd.Curso)
}
Curso::Curso(const Curso& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nome_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nome().size() > 0) {
    nome_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nome_);
  }
  codigo_ = from.codigo_;
  // @@protoc_insertion_point(copy_constructor:sd.Curso)
}

void Curso::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Curso_red_2eproto.base);
  nome_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  codigo_ = 0;
}

Curso::~Curso() {
  // @@protoc_insertion_point(destructor:sd.Curso)
  SharedDtor();
}

void Curso::SharedDtor() {
  nome_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Curso::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Curso& Curso::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Curso_red_2eproto.base);
  return *internal_default_instance();
}


void Curso::Clear() {
// @@protoc_insertion_point(message_clear_start:sd.Curso)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nome_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  codigo_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Curso::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Curso*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 codigo = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_codigo(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string nome = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("sd.Curso.nome");
        object = msg->mutable_nome();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Curso::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sd.Curso)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 codigo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &codigo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nome = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nome()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nome().data(), static_cast<int>(this->nome().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sd.Curso.nome"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sd.Curso)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sd.Curso)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Curso::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sd.Curso)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 codigo = 1;
  if (this->codigo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->codigo(), output);
  }

  // string nome = 2;
  if (this->nome().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nome().data(), static_cast<int>(this->nome().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sd.Curso.nome");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nome(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sd.Curso)
}

::google::protobuf::uint8* Curso::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sd.Curso)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 codigo = 1;
  if (this->codigo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->codigo(), target);
  }

  // string nome = 2;
  if (this->nome().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nome().data(), static_cast<int>(this->nome().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sd.Curso.nome");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nome(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sd.Curso)
  return target;
}

size_t Curso::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sd.Curso)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string nome = 2;
  if (this->nome().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nome());
  }

  // int32 codigo = 1;
  if (this->codigo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->codigo());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Curso::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sd.Curso)
  GOOGLE_DCHECK_NE(&from, this);
  const Curso* source =
      ::google::protobuf::DynamicCastToGenerated<Curso>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sd.Curso)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sd.Curso)
    MergeFrom(*source);
  }
}

void Curso::MergeFrom(const Curso& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sd.Curso)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nome().size() > 0) {

    nome_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nome_);
  }
  if (from.codigo() != 0) {
    set_codigo(from.codigo());
  }
}

void Curso::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sd.Curso)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Curso::CopyFrom(const Curso& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sd.Curso)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Curso::IsInitialized() const {
  return true;
}

void Curso::Swap(Curso* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Curso::InternalSwap(Curso* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  nome_.Swap(&other->nome_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(codigo_, other->codigo_);
}

::google::protobuf::Metadata Curso::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_red_2eproto);
  return ::file_level_metadata_red_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Disciplina::InitAsDefaultInstance() {
  ::sd::_Disciplina_default_instance_._instance.get_mutable()->curso_ = const_cast< ::sd::Curso*>(
      ::sd::Curso::internal_default_instance());
}
class Disciplina::HasBitSetters {
 public:
  static const ::sd::Curso& curso(const Disciplina* msg);
};

const ::sd::Curso&
Disciplina::HasBitSetters::curso(const Disciplina* msg) {
  return *msg->curso_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Disciplina::kCodigoFieldNumber;
const int Disciplina::kNomeFieldNumber;
const int Disciplina::kProfessorFieldNumber;
const int Disciplina::kCursoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Disciplina::Disciplina()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sd.Disciplina)
}
Disciplina::Disciplina(const Disciplina& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  codigo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.codigo().size() > 0) {
    codigo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.codigo_);
  }
  nome_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nome().size() > 0) {
    nome_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nome_);
  }
  professor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.professor().size() > 0) {
    professor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.professor_);
  }
  if (from.has_curso()) {
    curso_ = new ::sd::Curso(*from.curso_);
  } else {
    curso_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:sd.Disciplina)
}

void Disciplina::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Disciplina_red_2eproto.base);
  codigo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nome_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  professor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  curso_ = nullptr;
}

Disciplina::~Disciplina() {
  // @@protoc_insertion_point(destructor:sd.Disciplina)
  SharedDtor();
}

void Disciplina::SharedDtor() {
  codigo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nome_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  professor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete curso_;
}

void Disciplina::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Disciplina& Disciplina::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Disciplina_red_2eproto.base);
  return *internal_default_instance();
}


void Disciplina::Clear() {
// @@protoc_insertion_point(message_clear_start:sd.Disciplina)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  codigo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nome_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  professor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && curso_ != nullptr) {
    delete curso_;
  }
  curso_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Disciplina::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Disciplina*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string codigo = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("sd.Disciplina.codigo");
        object = msg->mutable_codigo();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string nome = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("sd.Disciplina.nome");
        object = msg->mutable_nome();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string professor = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("sd.Disciplina.professor");
        object = msg->mutable_professor();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .sd.Curso curso = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::sd::Curso::_InternalParse;
        object = msg->mutable_curso();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Disciplina::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sd.Disciplina)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string codigo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_codigo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->codigo().data(), static_cast<int>(this->codigo().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sd.Disciplina.codigo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nome = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nome()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nome().data(), static_cast<int>(this->nome().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sd.Disciplina.nome"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string professor = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_professor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->professor().data(), static_cast<int>(this->professor().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sd.Disciplina.professor"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sd.Curso curso = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_curso()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sd.Disciplina)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sd.Disciplina)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Disciplina::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sd.Disciplina)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string codigo = 1;
  if (this->codigo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->codigo().data(), static_cast<int>(this->codigo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sd.Disciplina.codigo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->codigo(), output);
  }

  // string nome = 2;
  if (this->nome().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nome().data(), static_cast<int>(this->nome().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sd.Disciplina.nome");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nome(), output);
  }

  // string professor = 3;
  if (this->professor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->professor().data(), static_cast<int>(this->professor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sd.Disciplina.professor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->professor(), output);
  }

  // .sd.Curso curso = 4;
  if (this->has_curso()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::curso(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sd.Disciplina)
}

::google::protobuf::uint8* Disciplina::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sd.Disciplina)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string codigo = 1;
  if (this->codigo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->codigo().data(), static_cast<int>(this->codigo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sd.Disciplina.codigo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->codigo(), target);
  }

  // string nome = 2;
  if (this->nome().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nome().data(), static_cast<int>(this->nome().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sd.Disciplina.nome");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nome(), target);
  }

  // string professor = 3;
  if (this->professor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->professor().data(), static_cast<int>(this->professor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sd.Disciplina.professor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->professor(), target);
  }

  // .sd.Curso curso = 4;
  if (this->has_curso()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::curso(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sd.Disciplina)
  return target;
}

size_t Disciplina::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sd.Disciplina)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string codigo = 1;
  if (this->codigo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->codigo());
  }

  // string nome = 2;
  if (this->nome().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nome());
  }

  // string professor = 3;
  if (this->professor().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->professor());
  }

  // .sd.Curso curso = 4;
  if (this->has_curso()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *curso_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Disciplina::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sd.Disciplina)
  GOOGLE_DCHECK_NE(&from, this);
  const Disciplina* source =
      ::google::protobuf::DynamicCastToGenerated<Disciplina>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sd.Disciplina)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sd.Disciplina)
    MergeFrom(*source);
  }
}

void Disciplina::MergeFrom(const Disciplina& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sd.Disciplina)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.codigo().size() > 0) {

    codigo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.codigo_);
  }
  if (from.nome().size() > 0) {

    nome_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nome_);
  }
  if (from.professor().size() > 0) {

    professor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.professor_);
  }
  if (from.has_curso()) {
    mutable_curso()->::sd::Curso::MergeFrom(from.curso());
  }
}

void Disciplina::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sd.Disciplina)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Disciplina::CopyFrom(const Disciplina& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sd.Disciplina)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Disciplina::IsInitialized() const {
  return true;
}

void Disciplina::Swap(Disciplina* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Disciplina::InternalSwap(Disciplina* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  codigo_.Swap(&other->codigo_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nome_.Swap(&other->nome_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  professor_.Swap(&other->professor_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(curso_, other->curso_);
}

::google::protobuf::Metadata Disciplina::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_red_2eproto);
  return ::file_level_metadata_red_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Aluno::InitAsDefaultInstance() {
  ::sd::_Aluno_default_instance_._instance.get_mutable()->curso_ = const_cast< ::sd::Curso*>(
      ::sd::Curso::internal_default_instance());
}
class Aluno::HasBitSetters {
 public:
  static const ::sd::Curso& curso(const Aluno* msg);
};

const ::sd::Curso&
Aluno::HasBitSetters::curso(const Aluno* msg) {
  return *msg->curso_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Aluno::kRAFieldNumber;
const int Aluno::kNomeFieldNumber;
const int Aluno::kPeriodoFieldNumber;
const int Aluno::kCursoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Aluno::Aluno()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sd.Aluno)
}
Aluno::Aluno(const Aluno& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nome_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nome().size() > 0) {
    nome_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nome_);
  }
  if (from.has_curso()) {
    curso_ = new ::sd::Curso(*from.curso_);
  } else {
    curso_ = nullptr;
  }
  ::memcpy(&ra_, &from.ra_,
    static_cast<size_t>(reinterpret_cast<char*>(&periodo_) -
    reinterpret_cast<char*>(&ra_)) + sizeof(periodo_));
  // @@protoc_insertion_point(copy_constructor:sd.Aluno)
}

void Aluno::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Aluno_red_2eproto.base);
  nome_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&curso_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&periodo_) -
      reinterpret_cast<char*>(&curso_)) + sizeof(periodo_));
}

Aluno::~Aluno() {
  // @@protoc_insertion_point(destructor:sd.Aluno)
  SharedDtor();
}

void Aluno::SharedDtor() {
  nome_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete curso_;
}

void Aluno::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Aluno& Aluno::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Aluno_red_2eproto.base);
  return *internal_default_instance();
}


void Aluno::Clear() {
// @@protoc_insertion_point(message_clear_start:sd.Aluno)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nome_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && curso_ != nullptr) {
    delete curso_;
  }
  curso_ = nullptr;
  ::memset(&ra_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&periodo_) -
      reinterpret_cast<char*>(&ra_)) + sizeof(periodo_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Aluno::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Aluno*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 RA = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_ra(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string nome = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("sd.Aluno.nome");
        object = msg->mutable_nome();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 periodo = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_periodo(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .sd.Curso curso = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::sd::Curso::_InternalParse;
        object = msg->mutable_curso();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Aluno::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sd.Aluno)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 RA = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ra_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nome = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nome()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nome().data(), static_cast<int>(this->nome().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sd.Aluno.nome"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 periodo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &periodo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sd.Curso curso = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_curso()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sd.Aluno)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sd.Aluno)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Aluno::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sd.Aluno)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RA = 1;
  if (this->ra() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ra(), output);
  }

  // string nome = 2;
  if (this->nome().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nome().data(), static_cast<int>(this->nome().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sd.Aluno.nome");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nome(), output);
  }

  // int32 periodo = 3;
  if (this->periodo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->periodo(), output);
  }

  // .sd.Curso curso = 4;
  if (this->has_curso()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::curso(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sd.Aluno)
}

::google::protobuf::uint8* Aluno::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sd.Aluno)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RA = 1;
  if (this->ra() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ra(), target);
  }

  // string nome = 2;
  if (this->nome().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nome().data(), static_cast<int>(this->nome().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sd.Aluno.nome");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nome(), target);
  }

  // int32 periodo = 3;
  if (this->periodo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->periodo(), target);
  }

  // .sd.Curso curso = 4;
  if (this->has_curso()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::curso(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sd.Aluno)
  return target;
}

size_t Aluno::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sd.Aluno)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string nome = 2;
  if (this->nome().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nome());
  }

  // .sd.Curso curso = 4;
  if (this->has_curso()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *curso_);
  }

  // int32 RA = 1;
  if (this->ra() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ra());
  }

  // int32 periodo = 3;
  if (this->periodo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->periodo());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Aluno::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sd.Aluno)
  GOOGLE_DCHECK_NE(&from, this);
  const Aluno* source =
      ::google::protobuf::DynamicCastToGenerated<Aluno>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sd.Aluno)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sd.Aluno)
    MergeFrom(*source);
  }
}

void Aluno::MergeFrom(const Aluno& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sd.Aluno)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nome().size() > 0) {

    nome_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nome_);
  }
  if (from.has_curso()) {
    mutable_curso()->::sd::Curso::MergeFrom(from.curso());
  }
  if (from.ra() != 0) {
    set_ra(from.ra());
  }
  if (from.periodo() != 0) {
    set_periodo(from.periodo());
  }
}

void Aluno::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sd.Aluno)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Aluno::CopyFrom(const Aluno& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sd.Aluno)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Aluno::IsInitialized() const {
  return true;
}

void Aluno::Swap(Aluno* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Aluno::InternalSwap(Aluno* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  nome_.Swap(&other->nome_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(curso_, other->curso_);
  swap(ra_, other->ra_);
  swap(periodo_, other->periodo_);
}

::google::protobuf::Metadata Aluno::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_red_2eproto);
  return ::file_level_metadata_red_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Matricula::InitAsDefaultInstance() {
  ::sd::_Matricula_default_instance_._instance.get_mutable()->aluno_ = const_cast< ::sd::Aluno*>(
      ::sd::Aluno::internal_default_instance());
  ::sd::_Matricula_default_instance_._instance.get_mutable()->disciplina_ = const_cast< ::sd::Disciplina*>(
      ::sd::Disciplina::internal_default_instance());
}
class Matricula::HasBitSetters {
 public:
  static const ::sd::Aluno& aluno(const Matricula* msg);
  static const ::sd::Disciplina& disciplina(const Matricula* msg);
};

const ::sd::Aluno&
Matricula::HasBitSetters::aluno(const Matricula* msg) {
  return *msg->aluno_;
}
const ::sd::Disciplina&
Matricula::HasBitSetters::disciplina(const Matricula* msg) {
  return *msg->disciplina_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Matricula::kAlunoFieldNumber;
const int Matricula::kDisciplinaFieldNumber;
const int Matricula::kAnoFieldNumber;
const int Matricula::kSemestreFieldNumber;
const int Matricula::kNotaFieldNumber;
const int Matricula::kFaltasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Matricula::Matricula()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sd.Matricula)
}
Matricula::Matricula(const Matricula& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_aluno()) {
    aluno_ = new ::sd::Aluno(*from.aluno_);
  } else {
    aluno_ = nullptr;
  }
  if (from.has_disciplina()) {
    disciplina_ = new ::sd::Disciplina(*from.disciplina_);
  } else {
    disciplina_ = nullptr;
  }
  ::memcpy(&ano_, &from.ano_,
    static_cast<size_t>(reinterpret_cast<char*>(&faltas_) -
    reinterpret_cast<char*>(&ano_)) + sizeof(faltas_));
  // @@protoc_insertion_point(copy_constructor:sd.Matricula)
}

void Matricula::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Matricula_red_2eproto.base);
  ::memset(&aluno_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&faltas_) -
      reinterpret_cast<char*>(&aluno_)) + sizeof(faltas_));
}

Matricula::~Matricula() {
  // @@protoc_insertion_point(destructor:sd.Matricula)
  SharedDtor();
}

void Matricula::SharedDtor() {
  if (this != internal_default_instance()) delete aluno_;
  if (this != internal_default_instance()) delete disciplina_;
}

void Matricula::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Matricula& Matricula::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Matricula_red_2eproto.base);
  return *internal_default_instance();
}


void Matricula::Clear() {
// @@protoc_insertion_point(message_clear_start:sd.Matricula)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && aluno_ != nullptr) {
    delete aluno_;
  }
  aluno_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && disciplina_ != nullptr) {
    delete disciplina_;
  }
  disciplina_ = nullptr;
  ::memset(&ano_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&faltas_) -
      reinterpret_cast<char*>(&ano_)) + sizeof(faltas_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Matricula::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Matricula*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .sd.Aluno aluno = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::sd::Aluno::_InternalParse;
        object = msg->mutable_aluno();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .sd.Disciplina disciplina = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::sd::Disciplina::_InternalParse;
        object = msg->mutable_disciplina();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int32 ano = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ano(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 semestre = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_semestre(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // float nota = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 45) goto handle_unusual;
        msg->set_nota(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // int32 faltas = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_faltas(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Matricula::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sd.Matricula)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sd.Aluno aluno = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_aluno()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sd.Disciplina disciplina = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_disciplina()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ano = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ano_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 semestre = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &semestre_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float nota = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (45 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &nota_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 faltas = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &faltas_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sd.Matricula)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sd.Matricula)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Matricula::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sd.Matricula)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sd.Aluno aluno = 1;
  if (this->has_aluno()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::aluno(this), output);
  }

  // .sd.Disciplina disciplina = 2;
  if (this->has_disciplina()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::disciplina(this), output);
  }

  // int32 ano = 3;
  if (this->ano() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ano(), output);
  }

  // int32 semestre = 4;
  if (this->semestre() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->semestre(), output);
  }

  // float nota = 5;
  if (this->nota() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->nota(), output);
  }

  // int32 faltas = 6;
  if (this->faltas() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->faltas(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sd.Matricula)
}

::google::protobuf::uint8* Matricula::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sd.Matricula)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sd.Aluno aluno = 1;
  if (this->has_aluno()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::aluno(this), target);
  }

  // .sd.Disciplina disciplina = 2;
  if (this->has_disciplina()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::disciplina(this), target);
  }

  // int32 ano = 3;
  if (this->ano() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ano(), target);
  }

  // int32 semestre = 4;
  if (this->semestre() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->semestre(), target);
  }

  // float nota = 5;
  if (this->nota() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->nota(), target);
  }

  // int32 faltas = 6;
  if (this->faltas() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->faltas(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sd.Matricula)
  return target;
}

size_t Matricula::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sd.Matricula)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .sd.Aluno aluno = 1;
  if (this->has_aluno()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *aluno_);
  }

  // .sd.Disciplina disciplina = 2;
  if (this->has_disciplina()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *disciplina_);
  }

  // int32 ano = 3;
  if (this->ano() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ano());
  }

  // int32 semestre = 4;
  if (this->semestre() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->semestre());
  }

  // float nota = 5;
  if (this->nota() != 0) {
    total_size += 1 + 4;
  }

  // int32 faltas = 6;
  if (this->faltas() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->faltas());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Matricula::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sd.Matricula)
  GOOGLE_DCHECK_NE(&from, this);
  const Matricula* source =
      ::google::protobuf::DynamicCastToGenerated<Matricula>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sd.Matricula)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sd.Matricula)
    MergeFrom(*source);
  }
}

void Matricula::MergeFrom(const Matricula& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sd.Matricula)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_aluno()) {
    mutable_aluno()->::sd::Aluno::MergeFrom(from.aluno());
  }
  if (from.has_disciplina()) {
    mutable_disciplina()->::sd::Disciplina::MergeFrom(from.disciplina());
  }
  if (from.ano() != 0) {
    set_ano(from.ano());
  }
  if (from.semestre() != 0) {
    set_semestre(from.semestre());
  }
  if (from.nota() != 0) {
    set_nota(from.nota());
  }
  if (from.faltas() != 0) {
    set_faltas(from.faltas());
  }
}

void Matricula::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sd.Matricula)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Matricula::CopyFrom(const Matricula& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sd.Matricula)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Matricula::IsInitialized() const {
  return true;
}

void Matricula::Swap(Matricula* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Matricula::InternalSwap(Matricula* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(aluno_, other->aluno_);
  swap(disciplina_, other->disciplina_);
  swap(ano_, other->ano_);
  swap(semestre_, other->semestre_);
  swap(nota_, other->nota_);
  swap(faltas_, other->faltas_);
}

::google::protobuf::Metadata Matricula::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_red_2eproto);
  return ::file_level_metadata_red_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ResponseStatus::InitAsDefaultInstance() {
}
class ResponseStatus::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseStatus::kStatusCodeFieldNumber;
const int ResponseStatus::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseStatus::ResponseStatus()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sd.ResponseStatus)
}
ResponseStatus::ResponseStatus(const ResponseStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  statuscode_ = from.statuscode_;
  // @@protoc_insertion_point(copy_constructor:sd.ResponseStatus)
}

void ResponseStatus::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ResponseStatus_red_2eproto.base);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  statuscode_ = 0;
}

ResponseStatus::~ResponseStatus() {
  // @@protoc_insertion_point(destructor:sd.ResponseStatus)
  SharedDtor();
}

void ResponseStatus::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResponseStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResponseStatus& ResponseStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ResponseStatus_red_2eproto.base);
  return *internal_default_instance();
}


void ResponseStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:sd.ResponseStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  statuscode_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ResponseStatus::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ResponseStatus*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 statusCode = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_statuscode(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string message = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("sd.ResponseStatus.message");
        object = msg->mutable_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ResponseStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sd.ResponseStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 statusCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &statuscode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sd.ResponseStatus.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sd.ResponseStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sd.ResponseStatus)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ResponseStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sd.ResponseStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 statusCode = 1;
  if (this->statuscode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->statuscode(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sd.ResponseStatus.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sd.ResponseStatus)
}

::google::protobuf::uint8* ResponseStatus::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sd.ResponseStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 statusCode = 1;
  if (this->statuscode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->statuscode(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sd.ResponseStatus.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sd.ResponseStatus)
  return target;
}

size_t ResponseStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sd.ResponseStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // int32 statusCode = 1;
  if (this->statuscode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->statuscode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResponseStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sd.ResponseStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const ResponseStatus* source =
      ::google::protobuf::DynamicCastToGenerated<ResponseStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sd.ResponseStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sd.ResponseStatus)
    MergeFrom(*source);
  }
}

void ResponseStatus::MergeFrom(const ResponseStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sd.ResponseStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.statuscode() != 0) {
    set_statuscode(from.statuscode());
  }
}

void ResponseStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sd.ResponseStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseStatus::CopyFrom(const ResponseStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sd.ResponseStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseStatus::IsInitialized() const {
  return true;
}

void ResponseStatus::Swap(ResponseStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseStatus::InternalSwap(ResponseStatus* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(statuscode_, other->statuscode_);
}

::google::protobuf::Metadata ResponseStatus::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_red_2eproto);
  return ::file_level_metadata_red_2eproto[kIndexInFileMessages];
}


// ===================================================================

void NotaRequest::InitAsDefaultInstance() {
  ::sd::_NotaRequest_default_instance_._instance.get_mutable()->matricula_ = const_cast< ::sd::Matricula*>(
      ::sd::Matricula::internal_default_instance());
}
class NotaRequest::HasBitSetters {
 public:
  static const ::sd::Matricula& matricula(const NotaRequest* msg);
};

const ::sd::Matricula&
NotaRequest::HasBitSetters::matricula(const NotaRequest* msg) {
  return *msg->matricula_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotaRequest::kTypeFieldNumber;
const int NotaRequest::kMatriculaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotaRequest::NotaRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sd.NotaRequest)
}
NotaRequest::NotaRequest(const NotaRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_matricula()) {
    matricula_ = new ::sd::Matricula(*from.matricula_);
  } else {
    matricula_ = nullptr;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:sd.NotaRequest)
}

void NotaRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_NotaRequest_red_2eproto.base);
  ::memset(&matricula_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&matricula_)) + sizeof(type_));
}

NotaRequest::~NotaRequest() {
  // @@protoc_insertion_point(destructor:sd.NotaRequest)
  SharedDtor();
}

void NotaRequest::SharedDtor() {
  if (this != internal_default_instance()) delete matricula_;
}

void NotaRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NotaRequest& NotaRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_NotaRequest_red_2eproto.base);
  return *internal_default_instance();
}


void NotaRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sd.NotaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && matricula_ != nullptr) {
    delete matricula_;
  }
  matricula_ = nullptr;
  type_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NotaRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<NotaRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .sd.NotaRequest.OperationType type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_type(static_cast<::sd::NotaRequest_OperationType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .sd.Matricula matricula = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::sd::Matricula::_InternalParse;
        object = msg->mutable_matricula();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NotaRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sd.NotaRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sd.NotaRequest.OperationType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::sd::NotaRequest_OperationType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sd.Matricula matricula = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_matricula()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sd.NotaRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sd.NotaRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NotaRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sd.NotaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sd.NotaRequest.OperationType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // .sd.Matricula matricula = 2;
  if (this->has_matricula()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::matricula(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sd.NotaRequest)
}

::google::protobuf::uint8* NotaRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sd.NotaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sd.NotaRequest.OperationType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // .sd.Matricula matricula = 2;
  if (this->has_matricula()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::matricula(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sd.NotaRequest)
  return target;
}

size_t NotaRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sd.NotaRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .sd.Matricula matricula = 2;
  if (this->has_matricula()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *matricula_);
  }

  // .sd.NotaRequest.OperationType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NotaRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sd.NotaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const NotaRequest* source =
      ::google::protobuf::DynamicCastToGenerated<NotaRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sd.NotaRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sd.NotaRequest)
    MergeFrom(*source);
  }
}

void NotaRequest::MergeFrom(const NotaRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sd.NotaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_matricula()) {
    mutable_matricula()->::sd::Matricula::MergeFrom(from.matricula());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void NotaRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sd.NotaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotaRequest::CopyFrom(const NotaRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sd.NotaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotaRequest::IsInitialized() const {
  return true;
}

void NotaRequest::Swap(NotaRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotaRequest::InternalSwap(NotaRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(matricula_, other->matricula_);
  swap(type_, other->type_);
}

::google::protobuf::Metadata NotaRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_red_2eproto);
  return ::file_level_metadata_red_2eproto[kIndexInFileMessages];
}


// ===================================================================

void NotaResponse::InitAsDefaultInstance() {
  ::sd::_NotaResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::sd::ResponseStatus*>(
      ::sd::ResponseStatus::internal_default_instance());
}
class NotaResponse::HasBitSetters {
 public:
  static const ::sd::ResponseStatus& status(const NotaResponse* msg);
};

const ::sd::ResponseStatus&
NotaResponse::HasBitSetters::status(const NotaResponse* msg) {
  return *msg->status_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotaResponse::kMatriculaFieldNumber;
const int NotaResponse::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotaResponse::NotaResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sd.NotaResponse)
}
NotaResponse::NotaResponse(const NotaResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      matricula_(from.matricula_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_status()) {
    status_ = new ::sd::ResponseStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:sd.NotaResponse)
}

void NotaResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_NotaResponse_red_2eproto.base);
  status_ = nullptr;
}

NotaResponse::~NotaResponse() {
  // @@protoc_insertion_point(destructor:sd.NotaResponse)
  SharedDtor();
}

void NotaResponse::SharedDtor() {
  if (this != internal_default_instance()) delete status_;
}

void NotaResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NotaResponse& NotaResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_NotaResponse_red_2eproto.base);
  return *internal_default_instance();
}


void NotaResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sd.NotaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  matricula_.Clear();
  if (GetArenaNoVirtual() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NotaResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<NotaResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .sd.Matricula matricula = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::sd::Matricula::_InternalParse;
          object = msg->add_matricula();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // .sd.ResponseStatus status = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::sd::ResponseStatus::_InternalParse;
        object = msg->mutable_status();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NotaResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sd.NotaResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .sd.Matricula matricula = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_matricula()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sd.ResponseStatus status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sd.NotaResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sd.NotaResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NotaResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sd.NotaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .sd.Matricula matricula = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->matricula_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->matricula(static_cast<int>(i)),
      output);
  }

  // .sd.ResponseStatus status = 2;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::status(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sd.NotaResponse)
}

::google::protobuf::uint8* NotaResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sd.NotaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .sd.Matricula matricula = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->matricula_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->matricula(static_cast<int>(i)), target);
  }

  // .sd.ResponseStatus status = 2;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::status(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sd.NotaResponse)
  return target;
}

size_t NotaResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sd.NotaResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sd.Matricula matricula = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->matricula_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->matricula(static_cast<int>(i)));
    }
  }

  // .sd.ResponseStatus status = 2;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NotaResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sd.NotaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const NotaResponse* source =
      ::google::protobuf::DynamicCastToGenerated<NotaResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sd.NotaResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sd.NotaResponse)
    MergeFrom(*source);
  }
}

void NotaResponse::MergeFrom(const NotaResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sd.NotaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  matricula_.MergeFrom(from.matricula_);
  if (from.has_status()) {
    mutable_status()->::sd::ResponseStatus::MergeFrom(from.status());
  }
}

void NotaResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sd.NotaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotaResponse::CopyFrom(const NotaResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sd.NotaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotaResponse::IsInitialized() const {
  return true;
}

void NotaResponse::Swap(NotaResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotaResponse::InternalSwap(NotaResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&matricula_)->InternalSwap(CastToBase(&other->matricula_));
  swap(status_, other->status_);
}

::google::protobuf::Metadata NotaResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_red_2eproto);
  return ::file_level_metadata_red_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MatriculaRequest::InitAsDefaultInstance() {
  ::sd::_MatriculaRequest_default_instance_._instance.get_mutable()->disciplina_ = const_cast< ::sd::Disciplina*>(
      ::sd::Disciplina::internal_default_instance());
}
class MatriculaRequest::HasBitSetters {
 public:
  static const ::sd::Disciplina& disciplina(const MatriculaRequest* msg);
};

const ::sd::Disciplina&
MatriculaRequest::HasBitSetters::disciplina(const MatriculaRequest* msg) {
  return *msg->disciplina_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatriculaRequest::kDisciplinaFieldNumber;
const int MatriculaRequest::kAnoFieldNumber;
const int MatriculaRequest::kSemestreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatriculaRequest::MatriculaRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sd.MatriculaRequest)
}
MatriculaRequest::MatriculaRequest(const MatriculaRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_disciplina()) {
    disciplina_ = new ::sd::Disciplina(*from.disciplina_);
  } else {
    disciplina_ = nullptr;
  }
  ::memcpy(&ano_, &from.ano_,
    static_cast<size_t>(reinterpret_cast<char*>(&semestre_) -
    reinterpret_cast<char*>(&ano_)) + sizeof(semestre_));
  // @@protoc_insertion_point(copy_constructor:sd.MatriculaRequest)
}

void MatriculaRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MatriculaRequest_red_2eproto.base);
  ::memset(&disciplina_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&semestre_) -
      reinterpret_cast<char*>(&disciplina_)) + sizeof(semestre_));
}

MatriculaRequest::~MatriculaRequest() {
  // @@protoc_insertion_point(destructor:sd.MatriculaRequest)
  SharedDtor();
}

void MatriculaRequest::SharedDtor() {
  if (this != internal_default_instance()) delete disciplina_;
}

void MatriculaRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MatriculaRequest& MatriculaRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MatriculaRequest_red_2eproto.base);
  return *internal_default_instance();
}


void MatriculaRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sd.MatriculaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && disciplina_ != nullptr) {
    delete disciplina_;
  }
  disciplina_ = nullptr;
  ::memset(&ano_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&semestre_) -
      reinterpret_cast<char*>(&ano_)) + sizeof(semestre_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MatriculaRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MatriculaRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .sd.Disciplina disciplina = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::sd::Disciplina::_InternalParse;
        object = msg->mutable_disciplina();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int32 ano = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_ano(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 semestre = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_semestre(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MatriculaRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sd.MatriculaRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sd.Disciplina disciplina = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_disciplina()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ano = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ano_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 semestre = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &semestre_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sd.MatriculaRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sd.MatriculaRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MatriculaRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sd.MatriculaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sd.Disciplina disciplina = 1;
  if (this->has_disciplina()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::disciplina(this), output);
  }

  // int32 ano = 2;
  if (this->ano() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ano(), output);
  }

  // int32 semestre = 3;
  if (this->semestre() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->semestre(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sd.MatriculaRequest)
}

::google::protobuf::uint8* MatriculaRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sd.MatriculaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sd.Disciplina disciplina = 1;
  if (this->has_disciplina()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::disciplina(this), target);
  }

  // int32 ano = 2;
  if (this->ano() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ano(), target);
  }

  // int32 semestre = 3;
  if (this->semestre() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->semestre(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sd.MatriculaRequest)
  return target;
}

size_t MatriculaRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sd.MatriculaRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .sd.Disciplina disciplina = 1;
  if (this->has_disciplina()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *disciplina_);
  }

  // int32 ano = 2;
  if (this->ano() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ano());
  }

  // int32 semestre = 3;
  if (this->semestre() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->semestre());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MatriculaRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sd.MatriculaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MatriculaRequest* source =
      ::google::protobuf::DynamicCastToGenerated<MatriculaRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sd.MatriculaRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sd.MatriculaRequest)
    MergeFrom(*source);
  }
}

void MatriculaRequest::MergeFrom(const MatriculaRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sd.MatriculaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_disciplina()) {
    mutable_disciplina()->::sd::Disciplina::MergeFrom(from.disciplina());
  }
  if (from.ano() != 0) {
    set_ano(from.ano());
  }
  if (from.semestre() != 0) {
    set_semestre(from.semestre());
  }
}

void MatriculaRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sd.MatriculaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatriculaRequest::CopyFrom(const MatriculaRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sd.MatriculaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatriculaRequest::IsInitialized() const {
  return true;
}

void MatriculaRequest::Swap(MatriculaRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatriculaRequest::InternalSwap(MatriculaRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(disciplina_, other->disciplina_);
  swap(ano_, other->ano_);
  swap(semestre_, other->semestre_);
}

::google::protobuf::Metadata MatriculaRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_red_2eproto);
  return ::file_level_metadata_red_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MatriculaResponse::InitAsDefaultInstance() {
  ::sd::_MatriculaResponse_default_instance_._instance.get_mutable()->disciplina_ = const_cast< ::sd::Disciplina*>(
      ::sd::Disciplina::internal_default_instance());
  ::sd::_MatriculaResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::sd::ResponseStatus*>(
      ::sd::ResponseStatus::internal_default_instance());
}
class MatriculaResponse::HasBitSetters {
 public:
  static const ::sd::Disciplina& disciplina(const MatriculaResponse* msg);
  static const ::sd::ResponseStatus& status(const MatriculaResponse* msg);
};

const ::sd::Disciplina&
MatriculaResponse::HasBitSetters::disciplina(const MatriculaResponse* msg) {
  return *msg->disciplina_;
}
const ::sd::ResponseStatus&
MatriculaResponse::HasBitSetters::status(const MatriculaResponse* msg) {
  return *msg->status_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatriculaResponse::kDisciplinaFieldNumber;
const int MatriculaResponse::kMatriculasFieldNumber;
const int MatriculaResponse::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatriculaResponse::MatriculaResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sd.MatriculaResponse)
}
MatriculaResponse::MatriculaResponse(const MatriculaResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      matriculas_(from.matriculas_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_disciplina()) {
    disciplina_ = new ::sd::Disciplina(*from.disciplina_);
  } else {
    disciplina_ = nullptr;
  }
  if (from.has_status()) {
    status_ = new ::sd::ResponseStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:sd.MatriculaResponse)
}

void MatriculaResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MatriculaResponse_red_2eproto.base);
  ::memset(&disciplina_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&disciplina_)) + sizeof(status_));
}

MatriculaResponse::~MatriculaResponse() {
  // @@protoc_insertion_point(destructor:sd.MatriculaResponse)
  SharedDtor();
}

void MatriculaResponse::SharedDtor() {
  if (this != internal_default_instance()) delete disciplina_;
  if (this != internal_default_instance()) delete status_;
}

void MatriculaResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MatriculaResponse& MatriculaResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MatriculaResponse_red_2eproto.base);
  return *internal_default_instance();
}


void MatriculaResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sd.MatriculaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  matriculas_.Clear();
  if (GetArenaNoVirtual() == nullptr && disciplina_ != nullptr) {
    delete disciplina_;
  }
  disciplina_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MatriculaResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MatriculaResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .sd.Disciplina disciplina = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::sd::Disciplina::_InternalParse;
        object = msg->mutable_disciplina();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .sd.Matricula matriculas = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::sd::Matricula::_InternalParse;
          object = msg->add_matriculas();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // .sd.ResponseStatus status = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::sd::ResponseStatus::_InternalParse;
        object = msg->mutable_status();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MatriculaResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sd.MatriculaResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sd.Disciplina disciplina = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_disciplina()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sd.Matricula matriculas = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_matriculas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sd.ResponseStatus status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sd.MatriculaResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sd.MatriculaResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MatriculaResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sd.MatriculaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sd.Disciplina disciplina = 1;
  if (this->has_disciplina()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::disciplina(this), output);
  }

  // repeated .sd.Matricula matriculas = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->matriculas_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->matriculas(static_cast<int>(i)),
      output);
  }

  // .sd.ResponseStatus status = 3;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::status(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sd.MatriculaResponse)
}

::google::protobuf::uint8* MatriculaResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sd.MatriculaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sd.Disciplina disciplina = 1;
  if (this->has_disciplina()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::disciplina(this), target);
  }

  // repeated .sd.Matricula matriculas = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->matriculas_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->matriculas(static_cast<int>(i)), target);
  }

  // .sd.ResponseStatus status = 3;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::status(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sd.MatriculaResponse)
  return target;
}

size_t MatriculaResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sd.MatriculaResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sd.Matricula matriculas = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->matriculas_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->matriculas(static_cast<int>(i)));
    }
  }

  // .sd.Disciplina disciplina = 1;
  if (this->has_disciplina()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *disciplina_);
  }

  // .sd.ResponseStatus status = 3;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MatriculaResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sd.MatriculaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MatriculaResponse* source =
      ::google::protobuf::DynamicCastToGenerated<MatriculaResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sd.MatriculaResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sd.MatriculaResponse)
    MergeFrom(*source);
  }
}

void MatriculaResponse::MergeFrom(const MatriculaResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sd.MatriculaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  matriculas_.MergeFrom(from.matriculas_);
  if (from.has_disciplina()) {
    mutable_disciplina()->::sd::Disciplina::MergeFrom(from.disciplina());
  }
  if (from.has_status()) {
    mutable_status()->::sd::ResponseStatus::MergeFrom(from.status());
  }
}

void MatriculaResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sd.MatriculaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatriculaResponse::CopyFrom(const MatriculaResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sd.MatriculaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatriculaResponse::IsInitialized() const {
  return true;
}

void MatriculaResponse::Swap(MatriculaResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatriculaResponse::InternalSwap(MatriculaResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&matriculas_)->InternalSwap(CastToBase(&other->matriculas_));
  swap(disciplina_, other->disciplina_);
  swap(status_, other->status_);
}

::google::protobuf::Metadata MatriculaResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_red_2eproto);
  return ::file_level_metadata_red_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AlunosRequest::InitAsDefaultInstance() {
  ::sd::_AlunosRequest_default_instance_._instance.get_mutable()->disciplina_ = const_cast< ::sd::Disciplina*>(
      ::sd::Disciplina::internal_default_instance());
}
class AlunosRequest::HasBitSetters {
 public:
  static const ::sd::Disciplina& disciplina(const AlunosRequest* msg);
};

const ::sd::Disciplina&
AlunosRequest::HasBitSetters::disciplina(const AlunosRequest* msg) {
  return *msg->disciplina_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlunosRequest::kDisciplinaFieldNumber;
const int AlunosRequest::kAnoFieldNumber;
const int AlunosRequest::kSemestreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlunosRequest::AlunosRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sd.AlunosRequest)
}
AlunosRequest::AlunosRequest(const AlunosRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_disciplina()) {
    disciplina_ = new ::sd::Disciplina(*from.disciplina_);
  } else {
    disciplina_ = nullptr;
  }
  ::memcpy(&ano_, &from.ano_,
    static_cast<size_t>(reinterpret_cast<char*>(&semestre_) -
    reinterpret_cast<char*>(&ano_)) + sizeof(semestre_));
  // @@protoc_insertion_point(copy_constructor:sd.AlunosRequest)
}

void AlunosRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AlunosRequest_red_2eproto.base);
  ::memset(&disciplina_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&semestre_) -
      reinterpret_cast<char*>(&disciplina_)) + sizeof(semestre_));
}

AlunosRequest::~AlunosRequest() {
  // @@protoc_insertion_point(destructor:sd.AlunosRequest)
  SharedDtor();
}

void AlunosRequest::SharedDtor() {
  if (this != internal_default_instance()) delete disciplina_;
}

void AlunosRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AlunosRequest& AlunosRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AlunosRequest_red_2eproto.base);
  return *internal_default_instance();
}


void AlunosRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sd.AlunosRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && disciplina_ != nullptr) {
    delete disciplina_;
  }
  disciplina_ = nullptr;
  ::memset(&ano_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&semestre_) -
      reinterpret_cast<char*>(&ano_)) + sizeof(semestre_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AlunosRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AlunosRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .sd.Disciplina disciplina = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::sd::Disciplina::_InternalParse;
        object = msg->mutable_disciplina();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int32 ano = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_ano(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 semestre = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_semestre(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AlunosRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sd.AlunosRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sd.Disciplina disciplina = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_disciplina()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ano = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ano_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 semestre = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &semestre_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sd.AlunosRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sd.AlunosRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AlunosRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sd.AlunosRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sd.Disciplina disciplina = 1;
  if (this->has_disciplina()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::disciplina(this), output);
  }

  // int32 ano = 2;
  if (this->ano() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ano(), output);
  }

  // int32 semestre = 3;
  if (this->semestre() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->semestre(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sd.AlunosRequest)
}

::google::protobuf::uint8* AlunosRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sd.AlunosRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sd.Disciplina disciplina = 1;
  if (this->has_disciplina()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::disciplina(this), target);
  }

  // int32 ano = 2;
  if (this->ano() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ano(), target);
  }

  // int32 semestre = 3;
  if (this->semestre() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->semestre(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sd.AlunosRequest)
  return target;
}

size_t AlunosRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sd.AlunosRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .sd.Disciplina disciplina = 1;
  if (this->has_disciplina()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *disciplina_);
  }

  // int32 ano = 2;
  if (this->ano() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ano());
  }

  // int32 semestre = 3;
  if (this->semestre() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->semestre());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AlunosRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sd.AlunosRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AlunosRequest* source =
      ::google::protobuf::DynamicCastToGenerated<AlunosRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sd.AlunosRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sd.AlunosRequest)
    MergeFrom(*source);
  }
}

void AlunosRequest::MergeFrom(const AlunosRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sd.AlunosRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_disciplina()) {
    mutable_disciplina()->::sd::Disciplina::MergeFrom(from.disciplina());
  }
  if (from.ano() != 0) {
    set_ano(from.ano());
  }
  if (from.semestre() != 0) {
    set_semestre(from.semestre());
  }
}

void AlunosRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sd.AlunosRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlunosRequest::CopyFrom(const AlunosRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sd.AlunosRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlunosRequest::IsInitialized() const {
  return true;
}

void AlunosRequest::Swap(AlunosRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlunosRequest::InternalSwap(AlunosRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(disciplina_, other->disciplina_);
  swap(ano_, other->ano_);
  swap(semestre_, other->semestre_);
}

::google::protobuf::Metadata AlunosRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_red_2eproto);
  return ::file_level_metadata_red_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AlunosResponse::InitAsDefaultInstance() {
  ::sd::_AlunosResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::sd::ResponseStatus*>(
      ::sd::ResponseStatus::internal_default_instance());
}
class AlunosResponse::HasBitSetters {
 public:
  static const ::sd::ResponseStatus& status(const AlunosResponse* msg);
};

const ::sd::ResponseStatus&
AlunosResponse::HasBitSetters::status(const AlunosResponse* msg) {
  return *msg->status_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlunosResponse::kStatusFieldNumber;
const int AlunosResponse::kAlunosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlunosResponse::AlunosResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sd.AlunosResponse)
}
AlunosResponse::AlunosResponse(const AlunosResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      alunos_(from.alunos_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_status()) {
    status_ = new ::sd::ResponseStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:sd.AlunosResponse)
}

void AlunosResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AlunosResponse_red_2eproto.base);
  status_ = nullptr;
}

AlunosResponse::~AlunosResponse() {
  // @@protoc_insertion_point(destructor:sd.AlunosResponse)
  SharedDtor();
}

void AlunosResponse::SharedDtor() {
  if (this != internal_default_instance()) delete status_;
}

void AlunosResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AlunosResponse& AlunosResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AlunosResponse_red_2eproto.base);
  return *internal_default_instance();
}


void AlunosResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sd.AlunosResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  alunos_.Clear();
  if (GetArenaNoVirtual() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AlunosResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AlunosResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .sd.ResponseStatus status = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::sd::ResponseStatus::_InternalParse;
        object = msg->mutable_status();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .sd.Aluno alunos = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::sd::Aluno::_InternalParse;
          object = msg->add_alunos();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AlunosResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sd.AlunosResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sd.ResponseStatus status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sd.Aluno alunos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_alunos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sd.AlunosResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sd.AlunosResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AlunosResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sd.AlunosResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sd.ResponseStatus status = 1;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::status(this), output);
  }

  // repeated .sd.Aluno alunos = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alunos_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->alunos(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sd.AlunosResponse)
}

::google::protobuf::uint8* AlunosResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sd.AlunosResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sd.ResponseStatus status = 1;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::status(this), target);
  }

  // repeated .sd.Aluno alunos = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alunos_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->alunos(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sd.AlunosResponse)
  return target;
}

size_t AlunosResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sd.AlunosResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sd.Aluno alunos = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->alunos_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->alunos(static_cast<int>(i)));
    }
  }

  // .sd.ResponseStatus status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AlunosResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sd.AlunosResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AlunosResponse* source =
      ::google::protobuf::DynamicCastToGenerated<AlunosResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sd.AlunosResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sd.AlunosResponse)
    MergeFrom(*source);
  }
}

void AlunosResponse::MergeFrom(const AlunosResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sd.AlunosResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  alunos_.MergeFrom(from.alunos_);
  if (from.has_status()) {
    mutable_status()->::sd::ResponseStatus::MergeFrom(from.status());
  }
}

void AlunosResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sd.AlunosResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlunosResponse::CopyFrom(const AlunosResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sd.AlunosResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlunosResponse::IsInitialized() const {
  return true;
}

void AlunosResponse::Swap(AlunosResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlunosResponse::InternalSwap(AlunosResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&alunos_)->InternalSwap(CastToBase(&other->alunos_));
  swap(status_, other->status_);
}

::google::protobuf::Metadata AlunosResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_red_2eproto);
  return ::file_level_metadata_red_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DisciplinaRequest::InitAsDefaultInstance() {
  ::sd::_DisciplinaRequest_default_instance_._instance.get_mutable()->curso_ = const_cast< ::sd::Curso*>(
      ::sd::Curso::internal_default_instance());
}
class DisciplinaRequest::HasBitSetters {
 public:
  static const ::sd::Curso& curso(const DisciplinaRequest* msg);
};

const ::sd::Curso&
DisciplinaRequest::HasBitSetters::curso(const DisciplinaRequest* msg) {
  return *msg->curso_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisciplinaRequest::kCursoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisciplinaRequest::DisciplinaRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sd.DisciplinaRequest)
}
DisciplinaRequest::DisciplinaRequest(const DisciplinaRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_curso()) {
    curso_ = new ::sd::Curso(*from.curso_);
  } else {
    curso_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:sd.DisciplinaRequest)
}

void DisciplinaRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DisciplinaRequest_red_2eproto.base);
  curso_ = nullptr;
}

DisciplinaRequest::~DisciplinaRequest() {
  // @@protoc_insertion_point(destructor:sd.DisciplinaRequest)
  SharedDtor();
}

void DisciplinaRequest::SharedDtor() {
  if (this != internal_default_instance()) delete curso_;
}

void DisciplinaRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DisciplinaRequest& DisciplinaRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DisciplinaRequest_red_2eproto.base);
  return *internal_default_instance();
}


void DisciplinaRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sd.DisciplinaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && curso_ != nullptr) {
    delete curso_;
  }
  curso_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DisciplinaRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DisciplinaRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .sd.Curso curso = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::sd::Curso::_InternalParse;
        object = msg->mutable_curso();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DisciplinaRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sd.DisciplinaRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sd.Curso curso = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_curso()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sd.DisciplinaRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sd.DisciplinaRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DisciplinaRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sd.DisciplinaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sd.Curso curso = 1;
  if (this->has_curso()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::curso(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sd.DisciplinaRequest)
}

::google::protobuf::uint8* DisciplinaRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sd.DisciplinaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sd.Curso curso = 1;
  if (this->has_curso()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::curso(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sd.DisciplinaRequest)
  return target;
}

size_t DisciplinaRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sd.DisciplinaRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .sd.Curso curso = 1;
  if (this->has_curso()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *curso_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DisciplinaRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sd.DisciplinaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DisciplinaRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DisciplinaRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sd.DisciplinaRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sd.DisciplinaRequest)
    MergeFrom(*source);
  }
}

void DisciplinaRequest::MergeFrom(const DisciplinaRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sd.DisciplinaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_curso()) {
    mutable_curso()->::sd::Curso::MergeFrom(from.curso());
  }
}

void DisciplinaRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sd.DisciplinaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisciplinaRequest::CopyFrom(const DisciplinaRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sd.DisciplinaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisciplinaRequest::IsInitialized() const {
  return true;
}

void DisciplinaRequest::Swap(DisciplinaRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisciplinaRequest::InternalSwap(DisciplinaRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(curso_, other->curso_);
}

::google::protobuf::Metadata DisciplinaRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_red_2eproto);
  return ::file_level_metadata_red_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DisciplinaResponse::InitAsDefaultInstance() {
  ::sd::_DisciplinaResponse_default_instance_._instance.get_mutable()->curso_ = const_cast< ::sd::Curso*>(
      ::sd::Curso::internal_default_instance());
  ::sd::_DisciplinaResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::sd::ResponseStatus*>(
      ::sd::ResponseStatus::internal_default_instance());
}
class DisciplinaResponse::HasBitSetters {
 public:
  static const ::sd::Curso& curso(const DisciplinaResponse* msg);
  static const ::sd::ResponseStatus& status(const DisciplinaResponse* msg);
};

const ::sd::Curso&
DisciplinaResponse::HasBitSetters::curso(const DisciplinaResponse* msg) {
  return *msg->curso_;
}
const ::sd::ResponseStatus&
DisciplinaResponse::HasBitSetters::status(const DisciplinaResponse* msg) {
  return *msg->status_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisciplinaResponse::kCursoFieldNumber;
const int DisciplinaResponse::kDisciplinasFieldNumber;
const int DisciplinaResponse::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisciplinaResponse::DisciplinaResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sd.DisciplinaResponse)
}
DisciplinaResponse::DisciplinaResponse(const DisciplinaResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      disciplinas_(from.disciplinas_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_curso()) {
    curso_ = new ::sd::Curso(*from.curso_);
  } else {
    curso_ = nullptr;
  }
  if (from.has_status()) {
    status_ = new ::sd::ResponseStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:sd.DisciplinaResponse)
}

void DisciplinaResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DisciplinaResponse_red_2eproto.base);
  ::memset(&curso_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&curso_)) + sizeof(status_));
}

DisciplinaResponse::~DisciplinaResponse() {
  // @@protoc_insertion_point(destructor:sd.DisciplinaResponse)
  SharedDtor();
}

void DisciplinaResponse::SharedDtor() {
  if (this != internal_default_instance()) delete curso_;
  if (this != internal_default_instance()) delete status_;
}

void DisciplinaResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DisciplinaResponse& DisciplinaResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DisciplinaResponse_red_2eproto.base);
  return *internal_default_instance();
}


void DisciplinaResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sd.DisciplinaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  disciplinas_.Clear();
  if (GetArenaNoVirtual() == nullptr && curso_ != nullptr) {
    delete curso_;
  }
  curso_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DisciplinaResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DisciplinaResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .sd.Curso curso = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::sd::Curso::_InternalParse;
        object = msg->mutable_curso();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .sd.Disciplina disciplinas = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::sd::Disciplina::_InternalParse;
          object = msg->add_disciplinas();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // .sd.ResponseStatus status = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::sd::ResponseStatus::_InternalParse;
        object = msg->mutable_status();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DisciplinaResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sd.DisciplinaResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sd.Curso curso = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_curso()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sd.Disciplina disciplinas = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_disciplinas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sd.ResponseStatus status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sd.DisciplinaResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sd.DisciplinaResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DisciplinaResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sd.DisciplinaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sd.Curso curso = 1;
  if (this->has_curso()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::curso(this), output);
  }

  // repeated .sd.Disciplina disciplinas = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->disciplinas_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->disciplinas(static_cast<int>(i)),
      output);
  }

  // .sd.ResponseStatus status = 3;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::status(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sd.DisciplinaResponse)
}

::google::protobuf::uint8* DisciplinaResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sd.DisciplinaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sd.Curso curso = 1;
  if (this->has_curso()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::curso(this), target);
  }

  // repeated .sd.Disciplina disciplinas = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->disciplinas_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->disciplinas(static_cast<int>(i)), target);
  }

  // .sd.ResponseStatus status = 3;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::status(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sd.DisciplinaResponse)
  return target;
}

size_t DisciplinaResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sd.DisciplinaResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sd.Disciplina disciplinas = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->disciplinas_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->disciplinas(static_cast<int>(i)));
    }
  }

  // .sd.Curso curso = 1;
  if (this->has_curso()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *curso_);
  }

  // .sd.ResponseStatus status = 3;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DisciplinaResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sd.DisciplinaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DisciplinaResponse* source =
      ::google::protobuf::DynamicCastToGenerated<DisciplinaResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sd.DisciplinaResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sd.DisciplinaResponse)
    MergeFrom(*source);
  }
}

void DisciplinaResponse::MergeFrom(const DisciplinaResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sd.DisciplinaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  disciplinas_.MergeFrom(from.disciplinas_);
  if (from.has_curso()) {
    mutable_curso()->::sd::Curso::MergeFrom(from.curso());
  }
  if (from.has_status()) {
    mutable_status()->::sd::ResponseStatus::MergeFrom(from.status());
  }
}

void DisciplinaResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sd.DisciplinaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisciplinaResponse::CopyFrom(const DisciplinaResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sd.DisciplinaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisciplinaResponse::IsInitialized() const {
  return true;
}

void DisciplinaResponse::Swap(DisciplinaResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisciplinaResponse::InternalSwap(DisciplinaResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&disciplinas_)->InternalSwap(CastToBase(&other->disciplinas_));
  swap(curso_, other->curso_);
  swap(status_, other->status_);
}

::google::protobuf::Metadata DisciplinaResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_red_2eproto);
  return ::file_level_metadata_red_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sd
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::sd::Curso* Arena::CreateMaybeMessage< ::sd::Curso >(Arena* arena) {
  return Arena::CreateInternal< ::sd::Curso >(arena);
}
template<> PROTOBUF_NOINLINE ::sd::Disciplina* Arena::CreateMaybeMessage< ::sd::Disciplina >(Arena* arena) {
  return Arena::CreateInternal< ::sd::Disciplina >(arena);
}
template<> PROTOBUF_NOINLINE ::sd::Aluno* Arena::CreateMaybeMessage< ::sd::Aluno >(Arena* arena) {
  return Arena::CreateInternal< ::sd::Aluno >(arena);
}
template<> PROTOBUF_NOINLINE ::sd::Matricula* Arena::CreateMaybeMessage< ::sd::Matricula >(Arena* arena) {
  return Arena::CreateInternal< ::sd::Matricula >(arena);
}
template<> PROTOBUF_NOINLINE ::sd::ResponseStatus* Arena::CreateMaybeMessage< ::sd::ResponseStatus >(Arena* arena) {
  return Arena::CreateInternal< ::sd::ResponseStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::sd::NotaRequest* Arena::CreateMaybeMessage< ::sd::NotaRequest >(Arena* arena) {
  return Arena::CreateInternal< ::sd::NotaRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::sd::NotaResponse* Arena::CreateMaybeMessage< ::sd::NotaResponse >(Arena* arena) {
  return Arena::CreateInternal< ::sd::NotaResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::sd::MatriculaRequest* Arena::CreateMaybeMessage< ::sd::MatriculaRequest >(Arena* arena) {
  return Arena::CreateInternal< ::sd::MatriculaRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::sd::MatriculaResponse* Arena::CreateMaybeMessage< ::sd::MatriculaResponse >(Arena* arena) {
  return Arena::CreateInternal< ::sd::MatriculaResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::sd::AlunosRequest* Arena::CreateMaybeMessage< ::sd::AlunosRequest >(Arena* arena) {
  return Arena::CreateInternal< ::sd::AlunosRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::sd::AlunosResponse* Arena::CreateMaybeMessage< ::sd::AlunosResponse >(Arena* arena) {
  return Arena::CreateInternal< ::sd::AlunosResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::sd::DisciplinaRequest* Arena::CreateMaybeMessage< ::sd::DisciplinaRequest >(Arena* arena) {
  return Arena::CreateInternal< ::sd::DisciplinaRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::sd::DisciplinaResponse* Arena::CreateMaybeMessage< ::sd::DisciplinaResponse >(Arena* arena) {
  return Arena::CreateInternal< ::sd::DisciplinaResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
